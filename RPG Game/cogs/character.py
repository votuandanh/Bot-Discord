import discord
from discord.ext import commands
from discord import app_commands
import sqlite3
from utils.database import get_db_connection
from utils.checks import is_target_channel_check_func
from cogs.economy import SHOP_ITEMS # Import SHOP_ITEMS ƒë·ªÉ tra c·ª©u ch·ªâ s·ªë

# --- C√ÅC TH√ÄNH PH·∫¶N UI ƒê·ªÇ T·∫†O NH√ÇN V·∫¨T ---

# ƒê·ªãnh nghƒ©a ch·ªâ s·ªë c∆° b·∫£n cho m·ªói l·ªõp
CLASS_STATS = {
    "Warrior": {"hp": 120, "mp": 30, "atk": 12, "def": 8},
    "Mage": {"hp": 80, "mp": 80, "atk": 15, "def": 5},
    "Archer": {"hp": 100, "mp": 50, "atk": 13, "def": 6},
}

# View ƒë·ªÉ ch·ªçn L·ªõp nh√¢n v·∫≠t (Class)
class CharacterClassSelectView(discord.ui.View):
    def __init__(self, character_name):
        super().__init__(timeout=180)
        self.character_name = character_name

    @discord.ui.select(
        placeholder="Ch·ªçn l·ªõp nh√¢n v·∫≠t c·ªßa b·∫°n...",
        options=[
            discord.SelectOption(label="Chi·∫øn Binh (Warrior)", description="HP v√† Ph√≤ng th·ªß cao.", value="Warrior", emoji="‚öîÔ∏è"),
            discord.SelectOption(label="Ph√°p S∆∞ (Mage)", description="T·∫•n c√¥ng v√† MP cao.", value="Mage", emoji="‚ú®"),
            discord.SelectOption(label="Cung Th·ªß (Archer)", description="Ch·ªâ s·ªë c√¢n b·∫±ng.", value="Archer", emoji="üèπ"),
        ]
    )
    async def select_callback(self, interaction: discord.Interaction, select: discord.ui.Select):
        class_name = select.values[0]
        base_stats = CLASS_STATS[class_name]
        player_id = interaction.user.id

        try:
            conn = get_db_connection()
            cursor = conn.cursor()
            
            # Th√™m ng∆∞·ªùi ch∆°i m·ªõi v√†o CSDL
            cursor.execute("""
                INSERT INTO players (id, name, class, hp, mp, atk, def)
                VALUES (?, ?, ?, ?, ?, ?, ?)
            """, (player_id, self.character_name, class_name, base_stats['hp'], base_stats['mp'], base_stats['atk'], base_stats['def']))
            
            conn.commit()
            conn.close()

            embed = discord.Embed(
                title=f"T·∫°o Nh√¢n V·∫≠t Th√†nh C√¥ng!",
                description=f"Ch√†o m·ª´ng **{self.character_name}** (L·ªõp: {class_name}) ƒë·∫øn v·ªõi th·∫ø gi·ªõi!",
                color=discord.Color.green()
            )
            embed.set_thumbnail(url=interaction.user.avatar.url if interaction.user.avatar else None)
            
            # Ch·ªânh s·ª≠a tin nh·∫Øn g·ªëc, x√≥a View ƒëi
            await interaction.response.edit_message(content=None, embed=embed, view=None)

        except sqlite3.Error as e:
            await interaction.response.edit_message(content=f"L·ªói CSDL: {e}", embed=None, view=None)
        except Exception as e:
            await interaction.response.edit_message(content=f"L·ªói kh√¥ng x√°c ƒë·ªãnh: {e}", embed=None, view=None)

# Modal (Bi·ªÉu m·∫´u) ƒë·ªÉ nh·∫≠p T√™n nh√¢n v·∫≠t
class CharacterNameModal(discord.ui.Modal, title="T·∫°o Nh√¢n V·∫≠t M·ªõi"):
    # Input cho t√™n nh√¢n v·∫≠t
    name_input = discord.ui.TextInput(
        label="Nh·∫≠p t√™n nh√¢n v·∫≠t c·ªßa b·∫°n",
        placeholder="V√≠ d·ª•: Anh H√πng, D≈©ng Sƒ©...",
        required=True,
        min_length=3,
        max_length=20
    )

    async def on_submit(self, interaction: discord.Interaction):
        character_name = self.name_input.value

        # G·ª≠i ph·∫£n h·ªìi v·ªõi View ch·ªçn l·ªõp
        await interaction.response.send_message(
            f"T√™n nh√¢n v·∫≠t c·ªßa b·∫°n l√†: **{character_name}**. Gi·ªù h√£y ch·ªçn l·ªõp nh√¢n v·∫≠t:",
            view=CharacterClassSelectView(character_name),
            ephemeral=True
        )

    async def on_error(self, interaction: discord.Interaction, error: Exception):
        await interaction.response.send_message(f"Oops! ƒê√£ x·∫£y ra l·ªói: {error}", ephemeral=True)


# --- UI CHO TH√îNG TIN NH√ÇN V·∫¨T ---

def create_player_embed(player_data, user_avatar_url):
    """T·∫°o m·ªôt Embed t·ª´ d·ªØ li·ªáu ng∆∞·ªùi ch∆°i, bao g·ªìm c·∫£ ch·ªâ s·ªë t·ª´ trang b·ªã."""
    conn = get_db_connection()
    cursor = conn.cursor()

    # L·∫•y c√°c v·∫≠t ph·∫©m ƒë√£ trang b·ªã
    cursor.execute("SELECT item_name FROM inventory WHERE player_id = ? AND is_equipped = 1", (player_data['id'],))
    equipped_items = cursor.fetchall()
    conn.close()

    bonus_atk = 0
    bonus_def = 0
    equipped_names = []

    for item_row in equipped_items:
        item_name = item_row['item_name']
        equipped_names.append(item_name)
        # T√¨m v·∫≠t ph·∫©m trong SHOP_ITEMS ƒë·ªÉ l·∫•y ch·ªâ s·ªë
        for key, shop_item in SHOP_ITEMS.items():
            if shop_item['name'] == item_name:
                bonus_atk += shop_item.get('atk_boost', 0)
                bonus_def += shop_item.get('def_boost', 0)
                break

    embed = discord.Embed(
        title=f"Th√¥ng Tin Nh√¢n V·∫≠t: {player_data['name']}",
        color=discord.Color.blue()
    )
    embed.set_thumbnail(url=user_avatar_url)
    embed.add_field(name="L·ªõp Nh√¢n V·∫≠t", value=player_data['class'], inline=True)
    embed.add_field(name="C·∫•p ƒê·ªô", value=player_data['level'], inline=True)
    embed.add_field(name="Kinh Nghi·ªám (EXP)", value=f"{player_data['exp']} / {player_data['level'] * 100}", inline=False)
    embed.add_field(name="HP (M√°u)", value=f"{player_data['hp']}", inline=True)
    embed.add_field(name="MP (NƒÉng l∆∞·ª£ng)", value=f"{player_data['mp']}", inline=True)
    embed.add_field(name="V√†ng", value=f"{player_data['gold']} G", inline=False)
    
    # Hi·ªÉn th·ªã ch·ªâ s·ªë g·ªëc v√† ch·ªâ s·ªë c·ªông th√™m
    atk_display = f"{player_data['atk']} (+{bonus_atk})" if bonus_atk > 0 else str(player_data['atk'])
    def_display = f"{player_data['def']} (+{bonus_def})" if bonus_def > 0 else str(player_data['def'])
    embed.add_field(name="T·∫•n C√¥ng (ATK)", value=atk_display, inline=True)
    embed.add_field(name="Ph√≤ng Th·ªß (DEF)", value=def_display, inline=True)

    if equipped_names:
        embed.add_field(name="Trang b·ªã", value="\n".join(f"- {name}" for name in equipped_names), inline=False)

    embed.set_footer(text=f"ID: {player_data['id']}")
    return embed

class CharacterInfoView(discord.ui.View):
    def __init__(self, user_id):
        super().__init__(timeout=300) # TƒÉng timeout l√™n 5 ph√∫t
        self.user_id = user_id

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        # Ch·ªâ ng∆∞·ªùi d√πng ban ƒë·∫ßu m·ªõi c√≥ th·ªÉ t∆∞∆°ng t√°c
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("ƒê√¢y kh√¥ng ph·∫£i l√† b·∫£ng th√¥ng tin c·ªßa b·∫°n!", ephemeral=True)
            return False
        return True

    @discord.ui.button(label="üîÑ C·∫≠p nh·∫≠t", style=discord.ButtonStyle.primary)
    async def refresh_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        # 1. L·∫•y d·ªØ li·ªáu m·ªõi nh·∫•t
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM players WHERE id = ?", (self.user_id,))
        player = cursor.fetchone()
        conn.close()

        if not player:
            await interaction.response.edit_message(content="L·ªói: Kh√¥ng t√¨m th·∫•y nh√¢n v·∫≠t c·ªßa b·∫°n.", embed=None, view=None)
            return

        # 2. T·∫°o embed m·ªõi
        new_embed = create_player_embed(player, interaction.user.avatar.url if interaction.user.avatar else None)

        # 3. C·∫≠p nh·∫≠t tin nh·∫Øn
        await interaction.response.edit_message(embed=new_embed, view=self)


# --- ƒê·ªäNH NGHƒ®A COG ---

class CharacterCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="taonhanvat", description="T·∫°o m·ªôt nh√¢n v·∫≠t RPG m·ªõi.")
    @app_commands.check(is_target_channel_check_func)
    async def create_character(self, interaction: discord.Interaction):
        user_id = interaction.user.id
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM players WHERE id = ?", (user_id,))
        player = cursor.fetchone()
        conn.close()

        if player:
            await interaction.response.send_message("B·∫°n ƒë√£ c√≥ nh√¢n v·∫≠t r·ªìi!", ephemeral=True)
        else:
            await interaction.response.send_modal(CharacterNameModal())

    @app_commands.command(name="thongtin", description="Xem th√¥ng tin chi ti·∫øt v·ªÅ nh√¢n v·∫≠t c·ªßa b·∫°n.")
    @app_commands.check(is_target_channel_check_func)
    async def character_info(self, interaction: discord.Interaction):
        user_id = interaction.user.id
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM players WHERE id = ?", (user_id,))
        player = cursor.fetchone()
        conn.close()

        if player:
            embed = create_player_embed(player, interaction.user.avatar.url if interaction.user.avatar else None)
            view = CharacterInfoView(user_id)
            await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
        else:
            await interaction.response.send_message("B·∫°n ch∆∞a c√≥ nh√¢n v·∫≠t! H√£y d√πng l·ªánh `/taonhanvat` ƒë·ªÉ t·∫°o m·ªôt nh√¢n v·∫≠t m·ªõi.", ephemeral=True)

async def setup(bot):
    await bot.add_cog(CharacterCog(bot))
